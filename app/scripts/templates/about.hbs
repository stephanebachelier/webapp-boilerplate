<h1>About this boilerplate</h1>
<p>The idea of this boilerplate is to ease the start of an application.</p>

<h3>Why ?</h3>
<p>Yeoman generators are great but IMHO not sufficient for an everyday developer. When you're building lots of SPA you're already doing the same things to setup a project. There are a lots of generators on the wild so I decided to create this boilerplate. </p>

<h3>What's inside</h3>
<p>This boilerplate is built on top of `yeoman` to create SPA while using Backbone.Marionette. It was started by using `generator-backbone`.</p>
<ul>
	<li>`yo`: Yeoman of course!</li>
	<li>`grunt`: the famous javascript task runner</li>
	<li>`bower`: the front-end package manager</li>
	<li>`Backbone.Marionette` and its dependencies: `Backbone.Wreqr`, `Backbone.BabySitter`</li>
	<li>`Backbone.Syphon`: to serialize form as objects</li>
	<li>`validate.js`: to validate forms using its matching expressions</li>
	<li>`fastclick`: to remove ~300ms delay on click (mobile)</li>
	<li>`zepto`: replace `jQuery`, with a custom build to select only what's needed.</li>
	<li>`underscore`: will be replaced by `lodash` soon.</li>
	<li>`superagent`: a proper implementation to make HTTP request.</li>
</ul>

<h3>Using `yo` generators</h3>
<p>You can always use `yo` generators while using this boilerplate. While you don't try to bootstrap an app with any generator, you should be fine.</p>

<code>
$ yo backbone:model mymodel<br/>
    create app/scripts/models/mymodel.js
</code>